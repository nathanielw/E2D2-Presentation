@import "../bower-lib/components/bourbon/app/assets/stylesheets/bourbon";

$durationMed: 0.5s;

body {
	background: black;
	margin: 0;
	padding: 0;
}

.shadowed {
	box-shadow: 0 5px 40px rgba(black, 0.4);
}

// Don't use this directly - extend .subtleEntry instead
@mixin subtleEntryBase() {
	@include animation(subtleInLeft $durationMed ease-out);
	@include animation-fill-mode(backwards);
	
	@for $i from 1 through 10 {
		&:nth-child(#{$i}) {
			@include animation-delay(#{($i - 1) * $durationMed / 5});
		}
	}
}
	
.subtleEntry {
	@include subtleEntryBase();
}

// fragments shouldn't get their animation until they're visible
.fragment .subtleEntry, .fragment.subtleEntry  {
	@include animation(none);
}

.fragment.visible .subtleEntry, .fragment.visible.subtleEntry {
	@include subtleEntryBase();
}

.reveal {
	$primary: #343434;
	$secondary: #ffc107;
	$accent: #00BCD4;
	$accentDark: darken($accent, 10%);
	$androidGreen: #A4C639;
	
	$red: #F44336;
	$green: #4CAF50;
	
	$padding: 1em;

	font-family: 'Roboto Condensed', Roboto, sans-serif;
	font-size: 44px;
	color: $primary;
	
	section {
		height: 100%;
		width: 100%;
		text-align: left;
		
		padding: 0 !important;
	}
	
	.padded {
		padding: $padding;
	}
	
	h1, h2, h3 {
		font-family: 'Roboto Slab', Roboto, serif;
		font-weight: 700;
		text-transform: uppercase;
		line-height: 0.9;
	}
	
	h1 {
		font-size: 1.3em;
	}
	
	h2 {
		font-size: 2.2em;
		color: white;
		margin-bottom: 0.5em;
		
		text-shadow: 4px 4px 10px rgba(black, 0.16);
		
		&.small {
			font-size: 1.1em;
		}
	}
	
	h3 {
		font-size: 1.45em;
		margin-bottom: 0.5em;
		display: block;
	}
	
	h2 + h3 {
		margin-top: -0.7em;
	}

	
	small {
		font-size: 0.4em;
	}
	
	a {
		color: $accentDark;
		text-decoration: none;
		
		&:hover {
			color: $accent;
		}
	}
	
	code {
		font-family: 'Droid Sans Mono';
		font-size: 0.9em;
		padding: 0.2em 0.6em;
		background: rgba(white, 0.2);
		border-radius: 6px;
		
		box-shadow: 0 2px 5px rgba(black, 0.1);
	}
	
	em {
		font-style: italic;
	}
	
	ul {
		line-height: 1.1;
		list-style: none;
		
		li {
			@extend .subtleEntry;
			padding-left: 0.6em;
			position: relative;
			margin-bottom: 0.4em;

			&:before {
				position: absolute;
				left: 0;
				content: 'â€¢';
				opacity: 0.2;
			}
			
			&.positive:before {
				color: $green;
				opacity: 0.7;
			}
			
			&.negative:before {
				color: $red;
				opacity: 0.7;
			}
		}
	}
	
	[class^="md-"] {
		background: rgba(white, 0.8);
		border-radius: 100%;
		padding: 50px;
		color: $secondary;
	}
	
	.bg {
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		z-index: -1000;
	}
	
	.bg-secondary {
		background-color: $secondary;
	}
	
	.bg-android {
		background-color: $androidGreen;
	}
	
	.bg-accent {
		background-color: $accent;
	}
	
	
	.intro {
	
		line-height: 0.45;
		
		.content {
			text-align: right;
			position: absolute;
			right: 130px;
			top: 200px;
		}
	}

	.window {
		@extend .shadowed;
		
		img {
			z-index: -1;
			position: relative;
		}
		
		display: inline-block;
		border-radius: 6px;
		overflow: hidden;
		position: relative;
		
		$baseSize: 15px;
		
		&:before {
			content: attr(data-title);
			font-size: $baseSize;
			text-align: center;
			font-family: 'Roboto', sans-serif;
			font-weight: 300;
			
			clear: both;
			display: block;
			width: 100%;
			padding: 10px;
			
			background: rgba(white, 0.9);
			
			border-bottom: 1px solid rgba(black, 0.1);
			box-shadow: 0 0 10px rgba(black, 0.1);
		}
		
		&:after {
			$dotSize: 10px;
			
			content: '';

			display: block;
			position: absolute;
			top: ($dotSize + $baseSize) / 2;
			left: ($dotSize + $baseSize) / 2;
			
			
			width: $dotSize;
			height: $dotSize;
			border-radius: 100%;
			
			background: rgba(black, 0.2);
			
			box-shadow:  $dotSize * 1.4 0 0 rgba(black, 0.2), $dotSize * 2.8 0 0 rgba(black, 0.2);
		}
	}

	.card {
		@extend .shadowed;
		@extend .subtleEntry;

		padding: 1em;
		border-radius: 6px;
		background: #eee;
		display: block;
		float: left;
		
		position: relative;
		
		font-size: 0.6em;
		
		box-sizing: border-box;
		
		&.half {
			width: 49%;
			
			&:not(:nth-child(2n)) {
				margin-right: 2%;
			}
		}
		
		li {
			@include animation(none);
		}
		
		&>i  {
			text-align: center;
			
			position: absolute;
			top: -1em;
			
			margin-left: auto;
			margin-right: auto;
			left: 0;
			right: 0;
			
			display: block;
			
			
			background: #eee;
			box-shadow: 0 4px 10px rgba(black, 0.2);
			border-radius: 100%;
			width: 2em;
			height: 2em;
			line-height: 2em;
		}
	}
	
	.iconed {
		margin-top: 2em;
		padding-top: 3em;
	}
	
	.centered {
		text-align: center;
	}
	
	img, video {
		width: 100%;
		float: left;
	}
	
	.robot {
		position: absolute;
		right: -20%;
		bottom: -0%;
		fill: $androidGreen;
		@include transform(scale(1.5) rotate(-45deg));

		&.visible {
			@include animation(slideLeft 1s ease-out);
			
			#armRight {
				@include animation(wave 2s 0.8s ease-in-out);
				@include transform-origin(center 10%);
			}
		}
	}
}

// Keyframes for the Android robot wave and entry
@include keyframes(wave) {
	0%, 100% {
		@include transform(rotate(0));
	}
	25%, 50%, 75% {
		@include transform(rotate(-140deg));
	}
	40%, 60% {
		@include transform(rotate(-185deg) translateY(3px));
	}
}

@include keyframes(slideLeft) {
	0% {
		right: -100%;
	}
}

@include keyframes(subtleInLeft) {
	0% {
		opacity: 0;
		@include transform(translateX(20px));
	}	
	100% {
		@include transform(translateX(0px));
	}
}